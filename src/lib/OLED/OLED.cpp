#include "targets.h"
#include "OLED.h"
#include "POWERMGNT.h"
#include <U8g2lib.h>
#include "common.h"

U8G2_SH1106_128X64_NONAME_F_4W_SW_SPI u8g2(U8G2_R0, GPIO_PIN_OLED_SCK, GPIO_PIN_OLED_MOSI, GPIO_PIN_OLED_CS, GPIO_PIN_OLED_DC, GPIO_PIN_OLED_RST);

static unsigned char ELRSlogo[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 
  0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xFE, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x3F, 
  0xF8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0xE0, 0x03, 0xC0, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xE1, 0x0F, 0x0F, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0xFC, 
  0x3F, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x10, 0xFF, 0xFF, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x1F, 0xF0, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x47, 
  0xE1, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x80, 0xE3, 0xCF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x1F, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 
  0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x3C, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x06, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 
  0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x03, 0x40, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x0F, 0xC0, 
  0x03, 0xF0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xC0, 0x1D, 0x00, 0x02, 0xB0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xD8, 0xFF, 0xFF, 0x13, 0x07, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x98, 0xFF, 
  0xFF, 0x3B, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x38, 0x0C, 0x00, 0x00, 0x30, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xCE, 0xF8, 0x1F, 0xE6, 0x30, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0xF3, 0xF8, 
  0x1F, 0xCF, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x8C, 0xB3, 0x19, 0x90, 0x99, 0x61, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0xF1, 0x19, 0x98, 0x0F, 0x63, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0xF0, 0x18, 
  0x18, 0x0F, 0x63, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xC6, 0x00, 0xF8, 0x1F, 0x00, 0x43, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0xE0, 0xFB, 0x9F, 0x0F, 0x63, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC3, 0xF8, 0x07, 
  0xE0, 0x1F, 0xC2, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xC7, 0x18, 0x0E, 0x70, 0x38, 0xC3, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0xC7, 0xEC, 0x18, 0x30, 0x77, 0xC3, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC3, 0xFC, 0x19, 
  0x98, 0x2F, 0xC3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x83, 0x39, 0x1B, 0x99, 0x39, 0xC3, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x83, 0x0D, 0x9B, 0x91, 0xB1, 0xC1, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x82, 0x87, 0x1B, 
  0xB0, 0xE1, 0xC1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xE3, 0xC7, 0x0D, 0xB0, 0xC3, 0xC7, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0xC3, 0xE1, 0x0E, 0xE0, 0x87, 0xC7, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x70, 0x03, 
  0xC0, 0x0E, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x03, 0x38, 0x00, 0x00, 0x1C, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x1C, 0xFC, 0x3F, 0x30, 0xC0, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x0E, 0xFC, 
  0x3F, 0x70, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x03, 0x06, 0x0C, 0x30, 0xE0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xF3, 0x7D, 0xFB, 0xCF, 0xC0, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xF3, 0xFF, 
  0xFF, 0xCF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x03, 0x71, 0xFF, 0xDF, 0x8B, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 
  0x00, 0xC0, 0xE0, 0xC7, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x16, 0x00, 0x00, 0x00, 0x00, 0x40, 0xE0, 0x66, 0x02, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x20, 0x34, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x83, 0xD1, 0x8F, 0xE3, 
  0x78, 0x5E, 0x60, 0x6C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x3E, 0xDB, 0xD9, 0xB3, 0x19, 0xCB, 0x60, 0xE7, 0x01, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x17, 0x8E, 0x90, 0x18, 0x0D, 0x43, 0xE0, 0x83, 
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xCE, 0xF0, 0xF8, 
  0x7B, 0xCE, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x02, 0x8E, 0xB8, 0x18, 0x60, 0x58, 0x20, 0x04, 0x02, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x17, 0x9B, 0x99, 0x98, 0x68, 0xD9, 0x65, 0x9C, 
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBF, 0xF1, 0xCF, 0xF0, 
  0x3D, 0xCF, 0x2F, 0xEC, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, };


void OLED::displayLogo(){
    
    u8g2.begin();
    u8g2.clearBuffer();
    u8g2.drawXBM(0, 0, 128, 64, ELRSlogo);
    u8g2.sendBuffer();
}

void OLED::updateScreen(PowerLevels_e power, expresslrs_RFrates_e rate, expresslrs_tlm_ratio_e ratio){
    u8g2.clearBuffer();
    u8g2.setFont(u8g2_font_courR08_tr);
    u8g2.drawStr(0,10, "ExpressLRS develop");
    switch (rate)
    {
    case RATE_500HZ : u8g2.drawStr(0,20, "Rate: 500 Hz");
    case RATE_250HZ : u8g2.drawStr(0,20, "Rate: 250 Hz");
    case RATE_200HZ : u8g2.drawStr(0,20, "Rate: 200 Hz");
    case RATE_150HZ : u8g2.drawStr(0,20, "Rate: 150 Hz");
    case RATE_100HZ : u8g2.drawStr(0,20, "Rate: 100 Hz");
    case RATE_50HZ : u8g2.drawStr(0,20, "Rate: 50 Hz");
    case RATE_25HZ : u8g2.drawStr(0,20, "Rate: 25 Hz");
    case RATE_4HZ : u8g2.drawStr(0,20, "Rate: 4 Hz");
    default: u8g2.drawStr(0,20, "Rate: ERROR");
    }
    switch ((PowerLevels_e)power)
    {
    case PWR_10mW : u8g2.drawStr(0,30, "Power: 10mW");
    case PWR_25mW : u8g2.drawStr(0,30, "Power: 25mW");
    case PWR_100mW : u8g2.drawStr(0,30, "Power: 100mW");
    case PWR_250mW : u8g2.drawStr(0,30, "Power: 250mW");
    case PWR_500mW : u8g2.drawStr(0,30, "Power: 500mmW");
    case PWR_1000mW : u8g2.drawStr(0,30, "Power: 1000mW");
    case PWR_2000mW : u8g2.drawStr(0,30, "Power: 2000mW");
    case PWR_50mW : u8g2.drawStr(0,30, "Power: 50mW");
    default:u8g2.drawStr(0,30, "Power: Error");
    }
    switch (ratio)
    {
    case 0 : u8g2.drawStr(0,40, "Telem: OFF");
    case 1 : u8g2.drawStr(0,40, "Telem: 1:128");
    case 2 : u8g2.drawStr(0,40, "Telem: 1:64");
    case 3 : u8g2.drawStr(0,40, "Telem: 1:32");
    case 4 : u8g2.drawStr(0,40, "Telem: 1:16");
    case 5 : u8g2.drawStr(0,40, "Telem: 1:8");
    case 6 : u8g2.drawStr(0,40, "Telem: 1:4");
    case 7 : u8g2.drawStr(0,40, "Telem: 1:2");
    default: u8g2.drawStr(0,40, "Telem: error");
    }
    u8g2.drawStr(0,50, "Bind");
    u8g2.drawStr(0,60, "Wifi Update");
    u8g2.sendBuffer();
}


void OLED::updatePower(PowerLevels_e power){

    u8g2.clearBuffer();
    u8g2.setFont(u8g2_font_courR08_tr);
    switch ((PowerLevels_e)power)
    {
    case PWR_10mW : u8g2.drawStr(0,30, "Power: 10mW");
    case PWR_25mW : u8g2.drawStr(0,30, "Power: 25mW");
    case PWR_100mW : u8g2.drawStr(0,30, "Power: 100mW");
    case PWR_250mW : u8g2.drawStr(0,30, "Power: 250mW");
    case PWR_500mW : u8g2.drawStr(0,30, "Power: 500mmW");
    case PWR_1000mW : u8g2.drawStr(0,30, "Power: 1000mW");
    case PWR_2000mW : u8g2.drawStr(0,30, "Power: 2000mW");
    case PWR_50mW : u8g2.drawStr(0,30, "Power: 50mW");
    default:u8g2.drawStr(0,30, "Power: Error");
    }
    u8g2.sendBuffer();
}

void OLED::updateRate(expresslrs_RFrates_e rate){
    u8g2.clearBuffer();
    u8g2.setFont(u8g2_font_courR08_tr);
    switch (rate)
    {
    case RATE_500HZ : u8g2.drawStr(0,20, "Rate: 500 Hz");
    case RATE_250HZ : u8g2.drawStr(0,20, "Rate: 250 Hz");
    case RATE_200HZ : u8g2.drawStr(0,20, "Rate: 200 Hz");
    case RATE_150HZ : u8g2.drawStr(0,20, "Rate: 150 Hz");
    case RATE_100HZ : u8g2.drawStr(0,20, "Rate: 100 Hz");
    case RATE_50HZ : u8g2.drawStr(0,20, "Rate: 50 Hz");
    case RATE_25HZ : u8g2.drawStr(0,20, "Rate: 25 Hz");
    case RATE_4HZ : u8g2.drawStr(0,20, "Rate: 4 Hz");
    default: u8g2.drawStr(0,20, "Rate: ERROR");
    }
    u8g2.sendBuffer();
}

void OLED::updateTelmRatio(expresslrs_tlm_ratio_e ratio){
    u8g2.clearBuffer();
    u8g2.setFont(u8g2_font_courR08_tr);
    u8g2.drawStr(0,30, "Power: 25mW");
        switch (ratio)
    {
    case 0 : u8g2.drawStr(0,40, "Telem: OFF");
    case 1 : u8g2.drawStr(0,40, "Telem: 1:128");
    case 2 : u8g2.drawStr(0,40, "Telem: 1:64");
    case 3 : u8g2.drawStr(0,40, "Telem: 1:32");
    case 4 : u8g2.drawStr(0,40, "Telem: 1:16");
    case 5 : u8g2.drawStr(0,40, "Telem: 1:8");
    case 6 : u8g2.drawStr(0,40, "Telem: 1:4");
    case 7 : u8g2.drawStr(0,40, "Telem: 1:2");
    default: u8g2.drawStr(0,40, "Telem: error");
    }
    u8g2.sendBuffer();
}